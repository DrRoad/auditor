% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audit.R
\name{audit}
\alias{audit}
\title{Create modelAudit object}
\usage{
audit(model, data = NULL, y = NULL, predict.function = NULL,
  residual.function = NULL)
}
\arguments{
\item{model}{An object containing a model.}

\item{data}{data.frame or matrix - data used for fitting. If not provided, will be extracted from the model.}

\item{y}{Response used for building a model.}

\item{predict.function}{Function that takes two arguments: model and new data and returns numeric vector with predictions.}

\item{residual.function}{Function that takes two arguments: model and response vector and returns numeric vector with model residuals. If not provided, response residuals are calculated.}
}
\value{
An object of class ModelAudit, which contains:
#' \itemize{
\item \code{model.class} class of the audited model,
\item \code{model} the audited model,
\item \code{fitted.values} fitted values from model,
\item \code{data} data used for fitting the model,
\item \code{y} vecor with values of predicted variable used for fittng the model,
\item \code{predict.function} function that may be used for model predictions, shall return a single numerical value for each observation.
\item \code{residuals}
\item \code{std.residuals} standardized residuals - the residuals divided by theirs standard deviation.
}
}
\description{
Function \code{audit} create ModelAudit object for further validation of model.
Models may have very different structures. This function creates a unified representation of a model and calculate residuals,
which can be further processed by various error analysis functions.
}
\examples{
library(MASS)
model.glm <- glm(Postwt ~ Prewt + Treat + offset(Prewt), family = gaussian, data = anorexia)
audit.glm <- audit(model.glm)

p.fun <- function(model, data){predict(model, data, response = "link")}
audit.glm.newpred <- audit(model.glm, predict.function = p.fun)


library(randomForest)
model.rf <- randomForest(Species ~ ., data=iris)
audit.rf <- audit(model.rf)

}
